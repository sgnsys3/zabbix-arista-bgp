zabbix_export:
  version: '7.0'
  template_groups:
    - uuid: 36bff6c29af64692839d077febfc7079
      name: 'Templates/Network devices'
  templates:
    - uuid: b93aaa5a73564ada89520c4a69f64cdc
      template: 'Arista BGP by SNMP'
      name: 'Arista BGP by SNMP'
      groups:
        - name: 'Templates/Network devices'
      items:
        - uuid: c14e5715545f43a1aeba990571579990
          name: 'Arista BGP4v2 from SNMP'
          type: SNMP_AGENT
          snmp_oid: 'walk[.1.3.6.1.4.1.30065.4.1.1.2, .1.3.6.1.4.1.30065.4.1.1.4, .1.3.6.1.4.1.30065.4.1.1.8]'
          key: arista.bgp.snmpwalk
          history: '0'
          value_type: TEXT
          trends: '0'
          description: |
            .1.3.6.1.4.1.30065.4.1.1.2 aristaBgp4V2PeerTable
            .1.3.6.1.4.1.30065.4.1.1.4 aristaBgp4V2PeerEventTimesTable
            .1.3.6.1.4.1.30065.4.1.1.8 aristaBgp4V2PrefixGaugesTable
          tags:
            - tag: type
              value: raw
      discovery_rules:
        - uuid: 212b2eb413fe4a0eb9d1d7c3681d6a53
          name: 'BGP Peer discovery'
          type: DEPENDENT
          key: arista.bgp.discovery
          delay: '0'
          item_prototypes:
            - uuid: 11a72aab4b7f4f349137781f622b7f1d
              name: 'BGP Peer {#BGP_REMOTE_ADDR} ({#BGP_DESCRIPTION}) Admin State'
              type: DEPENDENT
              key: 'arista.bgp.adminState[{#SNMPINDEX}]'
              delay: '0'
              preprocessing:
                - type: SNMP_WALK_VALUE
                  parameters:
                    - '.1.3.6.1.4.1.30065.4.1.1.2.1.12.{#SNMPINDEX}'
                    - '0'
              master_item:
                key: arista.bgp.snmpwalk
              tags:
                - tag: asn
                  value: '{#BGP_REMOTE_ASN}'
            - uuid: d8ee56f38ae04564b2f87dcdc69618e5
              name: 'BGP Peer {#BGP_REMOTE_ADDR} ({#BGP_DESCRIPTION}) EVPN Incomming Accepted Prefixes'
              type: DEPENDENT
              key: 'arista.bgp.peerEVPNInAcceptedPrefixes[{#SNMPINDEX}]'
              delay: '0'
              preprocessing:
                - type: SNMP_WALK_VALUE
                  parameters:
                    - '.1.3.6.1.4.1.30065.4.1.1.8.1.4.{#SNMPINDEX}.25.70'
                    - '0'
              master_item:
                key: arista.bgp.snmpwalk
              tags:
                - tag: address_family
                  value: evpn
                - tag: asn
                  value: '{#BGP_REMOTE_ASN}'
            - uuid: 62ed55a4a8044386b01de56d0e65082c
              name: 'BGP Peer {#BGP_REMOTE_ADDR} ({#BGP_DESCRIPTION}) EVPN Incoming Prefixes'
              type: DEPENDENT
              key: 'arista.bgp.peerEVPNInPrefixes[{#SNMPINDEX}]'
              delay: '0'
              preprocessing:
                - type: SNMP_WALK_VALUE
                  parameters:
                    - '.1.3.6.1.4.1.30065.4.1.1.8.1.3.{#SNMPINDEX}.25.70'
                    - '0'
              master_item:
                key: arista.bgp.snmpwalk
              tags:
                - tag: address_family
                  value: evpn
                - tag: asn
                  value: '{#BGP_REMOTE_ASN}'
            - uuid: 05e3cc0697274a419a18e40631385c3e
              name: 'BGP Peer {#BGP_REMOTE_ADDR} ({#BGP_DESCRIPTION}) EVPN Outgoing Prefixes'
              type: DEPENDENT
              key: 'arista.bgp.peerEVPNOutPrefixes[{#SNMPINDEX}]'
              delay: '0'
              preprocessing:
                - type: SNMP_WALK_VALUE
                  parameters:
                    - '.1.3.6.1.4.1.30065.4.1.1.8.1.5.{#SNMPINDEX}.25.70'
                    - '0'
              master_item:
                key: arista.bgp.snmpwalk
              tags:
                - tag: address_family
                  value: evpn
                - tag: asn
                  value: '{#BGP_REMOTE_ASN}'
            - uuid: 8e552ad41dbd4a4ebfb65bf88eb22c31
              name: 'BGP Peer {#BGP_REMOTE_ADDR} ({#BGP_DESCRIPTION}) IPv4 Incomming Accepted Prefixes'
              type: DEPENDENT
              key: 'arista.bgp.peerIPv4InAcceptedPrefixes[{#SNMPINDEX}]'
              delay: '0'
              preprocessing:
                - type: SNMP_WALK_VALUE
                  parameters:
                    - '.1.3.6.1.4.1.30065.4.1.1.8.1.4.{#SNMPINDEX}.1.1'
                    - '0'
              master_item:
                key: arista.bgp.snmpwalk
              tags:
                - tag: address_family
                  value: ipv4
                - tag: asn
                  value: '{#BGP_REMOTE_ASN}'
            - uuid: 259335e0ea63412b8e62a480f431747e
              name: 'BGP Peer {#BGP_REMOTE_ADDR} ({#BGP_DESCRIPTION}) IPv4 Incoming Prefixes'
              type: DEPENDENT
              key: 'arista.bgp.peerIPv4InPrefixes[{#SNMPINDEX}]'
              delay: '0'
              preprocessing:
                - type: SNMP_WALK_VALUE
                  parameters:
                    - '.1.3.6.1.4.1.30065.4.1.1.8.1.3.{#SNMPINDEX}.1.1'
                    - '0'
              master_item:
                key: arista.bgp.snmpwalk
              tags:
                - tag: address_family
                  value: ipv4
                - tag: asn
                  value: '{#BGP_REMOTE_ASN}'
            - uuid: 321273e804204d9b933f72a5b6c01892
              name: 'BGP Peer {#BGP_REMOTE_ADDR} ({#BGP_DESCRIPTION}) IPv4 Outgoing Prefixes'
              type: DEPENDENT
              key: 'arista.bgp.peerIPv4OutPrefixes[{#SNMPINDEX}]'
              delay: '0'
              preprocessing:
                - type: SNMP_WALK_VALUE
                  parameters:
                    - '.1.3.6.1.4.1.30065.4.1.1.8.1.5.{#SNMPINDEX}.1.1'
                    - '0'
              master_item:
                key: arista.bgp.snmpwalk
              tags:
                - tag: address_family
                  value: ipv4
                - tag: asn
                  value: '{#BGP_REMOTE_ASN}'
            - uuid: 3ab73cffdedf48d788d186e33b41f4ef
              name: 'BGP Peer {#BGP_REMOTE_ADDR} ({#BGP_DESCRIPTION}) IPv6 Incomming Accepted Prefixes'
              type: DEPENDENT
              key: 'arista.bgp.peerIPv6InAcceptedPrefixes[{#SNMPINDEX}]'
              delay: '0'
              preprocessing:
                - type: SNMP_WALK_VALUE
                  parameters:
                    - '.1.3.6.1.4.1.30065.4.1.1.8.1.4.{#SNMPINDEX}.2.1'
                    - '0'
              master_item:
                key: arista.bgp.snmpwalk
              tags:
                - tag: address_family
                  value: ipv6
                - tag: asn
                  value: '{#BGP_REMOTE_ASN}'
            - uuid: fe72c9c9fd1842e0a34d4cdfd37284bc
              name: 'BGP Peer {#BGP_REMOTE_ADDR} ({#BGP_DESCRIPTION}) IPv6 Incoming Prefixes'
              type: DEPENDENT
              key: 'arista.bgp.peerIPv6InPrefixes[{#SNMPINDEX}]'
              delay: '0'
              preprocessing:
                - type: SNMP_WALK_VALUE
                  parameters:
                    - '.1.3.6.1.4.1.30065.4.1.1.8.1.3.{#SNMPINDEX}.2.1'
                    - '0'
              master_item:
                key: arista.bgp.snmpwalk
              tags:
                - tag: address_family
                  value: ipv6
                - tag: asn
                  value: '{#BGP_REMOTE_ASN}'
            - uuid: a999a137e0b44b4788f69ac94a82049a
              name: 'BGP Peer {#BGP_REMOTE_ADDR} ({#BGP_DESCRIPTION}) IPv6 Outgoing Prefixes'
              type: DEPENDENT
              key: 'arista.bgp.peerIPv6OutPrefixes[{#SNMPINDEX}]'
              delay: '0'
              preprocessing:
                - type: SNMP_WALK_VALUE
                  parameters:
                    - '.1.3.6.1.4.1.30065.4.1.1.8.1.5.{#SNMPINDEX}.2.1'
                    - '0'
              master_item:
                key: arista.bgp.snmpwalk
              tags:
                - tag: address_family
                  value: ipv6
                - tag: asn
                  value: '{#BGP_REMOTE_ASN}'
            - uuid: 70a21d15b1514564bf44ee55ee17168f
              name: 'BGP Peer {#BGP_REMOTE_ADDR} ({#BGP_DESCRIPTION}) Peer State'
              type: DEPENDENT
              key: 'arista.bgp.peerState[{#SNMPINDEX}]'
              delay: '0'
              preprocessing:
                - type: SNMP_WALK_VALUE
                  parameters:
                    - '.1.3.6.1.4.1.30065.4.1.1.2.1.13.{#SNMPINDEX}'
                    - '0'
              master_item:
                key: arista.bgp.snmpwalk
              tags:
                - tag: asn
                  value: '{#BGP_REMOTE_ASN}'
            - uuid: df9cf15873ea4f11896a2623d18191c6
              name: 'BGP Peer {#BGP_REMOTE_ADDR} ({#BGP_DESCRIPTION}) Uptime'
              type: DEPENDENT
              key: 'arista.bgp.uptime[{#SNMPINDEX}]'
              delay: '0'
              units: second
              preprocessing:
                - type: SNMP_WALK_VALUE
                  parameters:
                    - '.1.3.6.1.4.1.30065.4.1.1.4.1.1.{#SNMPINDEX}'
                    - '0'
              master_item:
                key: arista.bgp.snmpwalk
              tags:
                - tag: asn
                  value: '{#BGP_REMOTE_ASN}'
              trigger_prototypes:
                - uuid: aeefac465dfb41dcb77df423007de3b9
                  expression: 'last(/Arista BGP by SNMP/arista.bgp.uptime[{#SNMPINDEX}])<600'
                  name: 'BGP Peer {#BGP_REMOTE_ADDR} ({#BGP_DESCRIPTION}) is restarted'
                  priority: HIGH
                  description: 'BGP Peer {#BGP_REMOTE_ADDR} ({#BGP_DESCRIPTION}) is restarted (Uptime < 10 minute)'
          trigger_prototypes:
            - uuid: 06e16b6d84f046a78ecc520c2f192fda
              expression: 'last(/Arista BGP by SNMP/arista.bgp.peerState[{#SNMPINDEX}])<>6 and last(/Arista BGP by SNMP/arista.bgp.adminState[{#SNMPINDEX}])=2'
              name: 'BGP Peer {#BGP_REMOTE_ADDR} ({#BGP_DESCRIPTION}) is down'
              priority: HIGH
              description: 'BGP Peer {#BGP_REMOTE_ADDR} ({#BGP_DESCRIPTION}) is not in established state.'
          master_item:
            key: arista.bgp.snmpwalk
          preprocessing:
            - type: SNMP_WALK_TO_JSON
              parameters:
                - '{#BGP_REMOTE_ADDR}'
                - 1.3.6.1.4.1.30065.4.1.1.2.1.3
                - '0'
                - '{#BGP_REMOTE_ASN}'
                - 1.3.6.1.4.1.30065.4.1.1.2.1.10
                - '0'
                - '{#BGP_DESCRIPTION}'
                - .1.3.6.1.4.1.30065.4.1.1.2.1.14
                - '0'
            - type: JAVASCRIPT
              parameters:
                - |
                  function parseIPv6(parts) {
                      var hexParts = [];
                      for (var i = 3; i < 19; i++) {
                          var byte = parseInt(parts[i], 10);
                          var hex = byte.toString(16);
                          if (hex.length < 2) hex = '0' + hex;
                          hexParts.push(hex);
                      }
                  
                      var blocks = [];
                      for (var i = 0; i < 16; i += 2) {
                          blocks.push(hexParts[i] + hexParts[i + 1]);
                      }
                  
                      for (var i = 0; i < blocks.length; i++) {
                          blocks[i] = blocks[i].replace(/^0+/, '') || '0';
                      }
                  
                      // Compress zero blocks
                      var bestStart = -1, bestLen = 0, currStart = -1, currLen = 0;
                      for (var i = 0; i < blocks.length; i++) {
                          if (blocks[i] === '0') {
                              if (currStart === -1) {
                                  currStart = i;
                                  currLen = 1;
                              } else {
                                  currLen++;
                              }
                          } else {
                              if (currLen > bestLen) {
                                  bestStart = currStart;
                                  bestLen = currLen;
                              }
                              currStart = -1;
                              currLen = 0;
                          }
                      }
                      if (currLen > bestLen) {
                          bestStart = currStart;
                          bestLen = currLen;
                      }
                  
                      var result = [];
                      var skip = false;
                      for (var i = 0; i < blocks.length; i++) {
                          if (bestLen > 1 && i >= bestStart && i < bestStart + bestLen) {
                              if (!skip) {
                                  result.push('');
                                  skip = true;
                              }
                          } else {
                              result.push(blocks[i]);
                          }
                      }
                  
                      var ipv6 = result.join(':');
                      if (ipv6.indexOf('::') === 0) ipv6 = ':' + ipv6;
                      if (ipv6.lastIndexOf('::') === ipv6.length - 2) ipv6 = ipv6 + ':';
                  
                      return ipv6;
                  }
                  
                  function parseIPv4(parts) {
                      return parts.slice(3, 7).join('.');
                  }
                  
                  function getIPAddress(input) {
                      var parts = input.split('.');
                      if (parts.length === 19) {
                          return parseIPv6(parts);
                      } else if (parts.length === 7) {
                          return parseIPv4(parts);
                      } else {
                          return input;
                      }
                  }
                  
                  value = JSON.parse(value)
                  for (j=0;j<value.length;j++) {
                    raw_hex_ip_addr = value[j]['{#SNMPINDEX}'].split(' ').join('')
                    value[j]['{#BGP_REMOTE_ADDR}'] = getIPAddress(raw_hex_ip_addr).toUpperCase()
                  }
                  return JSON.stringify(value)
